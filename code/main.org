#+SETUPFILE: ../setupfile.org

* Render the app

This is glue code for our app to actually render. As such, I'm leaving it out of the =app.rpm= namespace.

#+BEGIN_SRC clojurescript :tangle core.cljs :mkdirp yes
  (ns app.core
    "This namespace contains your application and is the entrypoint for 'yarn start'."
    (:require [reagent.core :as r]
              [app.rpm.main :refer [spa-app]]))

  (defn ^:dev/after-load render
    "Render the toplevel component for this app."
    []
    (r/render [spa-app] (.getElementById js/document "app")))

  (defn ^:export main
    "Run application startup logic."
    []
    (render))
#+END_SRC

* Main

This is the top-level application and the entry-point for the glue code.

All the other components are defined in the =app.rpm.components= namespace.

#+BEGIN_SRC clojurescript :tangle rpm/main.cljs :mkdirp yes
  (ns app.rpm.main "The main Reagent app."
    (:require [app.rpm.components.header :refer [header]])
    (:require [app.rpm.components.app :refer [app]])
    (:require [app.rpm.components.footer :refer [footer]]))

  (defn spa-app
    "The main Reagent app."
    []
    [:<>
     [header][app][footer]])
#+END_SRC

* Next steps
** TODO Implement M17n using [[https://github.com/ptaoussanis/tempura][tempura]]
** TODO Implement routing using [[https://github.com/metosin/reitit][reitit]]

There are examples in the examples directory.

** TODO Add [[https://lilac.town/writing/modern-react-in-cljs-error-boundaries/][error boundaries]]

* Keep reading

- Chapter on [[./components.org][components]].
