#+SETUPFILE: ../setupfile.org

* Layout
** Main header

#+BEGIN_SRC clojure :tangle rpm/components/header.cljs :mkdirp yes
  (ns app.rpm.components.header "The main header.")

  (defn header
    "The site header."
    []
    (let [style {
                :padding 10
                :background-color "aliceblue"
                :text-align "center"
                }]
      [:header {:style style}
      [:h1 "RPM header"]]))

#+END_SRC

** Main app

#+BEGIN_SRC clojure :tangle rpm/components/app.cljs :mkdirp yes
  (ns app.rpm.components.app "The main Reagent app."
    (:require [app.rpm.components.login :refer [log-in-form]]))

  ;; A mock app, until we actually implement routing.
  (defn router-app
    "The router app."
    []
    [log-in-form])

  (defn app
    "The main Reagent app."
    []
    (let [style {
                :background-color "lightyellow"
                :padding 20
                :padding-top 35
                :padding-bottom 50
                }]
    [:main {:style style} [router-app]]))
#+END_SRC

** Main footer

#+BEGIN_SRC clojure :tangle rpm/components/footer.cljs :mkdirp yes
  (ns app.rpm.components.footer "The main footer.")

  (defn footer
    "The site footer."
    []
    (let [style {
                :padding 10
                :background-color "lavender"
                :text-align "center"
                }]
      [:footer {:style style} "RPM footer"]))
#+END_SRC

* Forms
** The login form

#+BEGIN_SRC clojure :tangle rpm/components/login.cljs :mkdirp yes
  (ns app.rpm.components.login "The login component."
    (:require [app.rpm.helpers.form :refer [password-field email-field]]))

  (defn on-submit
    ""
    [event]
    (js/console.log "Submit"))

  (defn log-in-form
    "..."
    []
    [:<>
    [:h1 "Come in please"]
    [:form {:on-submit on-submit}
      [email-field {:placeholder "you@yourdomain.com"} "Your e-mail"]
      [password-field "Your password"]
      [:div [:button "Log me in"]]]])
#+END_SRC
